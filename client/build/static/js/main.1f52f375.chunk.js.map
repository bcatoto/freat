{"version":3,"sources":["components/NavBar.js","components/Searchbar.js","components/Post.js","components/PostsFeed.js","components/PostPane.js","components/NewPost.js","App.js","serviceWorker.js","index.js","assets/images/berries.png"],"names":["NavBar","props","Navbar","className","variant","expand","Brand","Button","onClick","handleNewPost","href","Searchbar","Form","inline","Control","type","placeholder","Post","info","this","post","diet","map","i","Badge","pill","key","color","name","Accordion","Toggle","as","Card","eventKey","id","Header","Container","fluid","Row","noGutters","Title","title","room","building","Img","src","berries","Collapse","Body","description","feeds","Footer","renderDietOptions","React","Component","PostsFeed","posts","renderPosts","PostPane","NewPost","handleChange","event","target","value","state","setState","handleDietChange","handleSubmit","preventDefault","diets","length","push","axios","then","res","console","log","data","close","image","valid","buildings","handleClose","sort","index","Check","label","onChange","Modal","show","onSubmit","Group","Label","Col","controlId","renderBuildings","Feedback","rows","App","showModal","get","handleOpenModal","handleCloseModal","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1f52f375.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nexport default function NavBar(props) {\n  return (\n    <Navbar className=\"p-2 bg-primary\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand className=\"ml-2\">Freat</Navbar.Brand>\n      <Button\n        className=\"mr-auto\" variant=\"navbar\"\n        onClick={props.handleNewPost}\n      >\n        New post\n      </Button>\n      <Button  href=\"#profile\" variant=\"navbar\">Account</Button>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nexport default function Searchbar() {\n  return (\n    <Form inline className=\"p-3\">\n      <Form.Control className=\"form-search flex-grow-1\" type=\"text\" placeholder=\"Search for food...\" />\n      <Button variant=\"search\"><i className='fas fa-search'></i></Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Card from \"react-bootstrap/Card\"\nimport Button from \"react-bootstrap/Button\"\nimport Badge from \"react-bootstrap/Badge\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\n\nimport berries from \"./../assets/images/berries.png\"\n\nexport default class Post extends React.Component {\n  renderDietOptions() {\n    const info = [\n      {\n        \"key\": 0,\n        \"name\": \"Vegetarian\",\n        \"color\": \"vegetarian\",\n      },\n      {\n        \"key\": 1,\n        \"name\": \"Vegan\",\n        \"color\": \"vegan\",\n      },\n      {\n        \"key\": 2,\n        \"name\": \"Kosher\",\n        \"color\": \"kosher\",\n      },\n      {\n        \"key\": 3,\n        \"name\": \"Halal\",\n        \"color\": \"halal\",\n      },\n      {\n        \"key\": 4,\n        \"name\": \"Gluten-Free\",\n        \"color\": \"gluten\",\n      }\n    ];\n\n    const diets = this.props.post.diet.map(i => info[i]);\n    return diets.map(diet =>\n      <Badge pill key={diet.key} variant={diet.color}>{diet.name}</Badge>\n    );\n  }\n\n  render() {\n    return (\n      <Accordion.Toggle as={Card} eventKey={this.props.post.id}>\n        <Card.Header>\n          <Container fluid className=\"p-0\">\n            <Row noGutters=\"true\">\n              <Card.Title className=\"mr-auto\">{this.props.post.title}</Card.Title>\n              <span className=\"post-time\">15 minutes ago</span>\n            </Row>\n            <Row noGutters=\"true\" className=\"mt-1\">\n              <Button variant=\"location\">\n                <i className=\"fas fa-map-marker-alt mr-1\"></i>{this.props.post.room} {this.props.post.building}\n              </Button>\n            </Row>\n          </Container>\n        </Card.Header>\n        <Card.Img src={berries} />\n        <Accordion.Collapse eventKey={this.props.post.id}>\n          <Card.Body>\n            {this.props.post.description}\n            <br/>\n            <em>Feeds approximately: {this.props.post.feeds}</em>\n          </Card.Body>\n        </Accordion.Collapse>\n        <Card.Footer>\n          {this.renderDietOptions()}\n        </Card.Footer>\n      </Accordion.Toggle>\n    );\n  }\n}\n","import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Post from \"./Post\"\n\nexport default class PostsFeed extends React.Component {\n  renderPosts() {\n    return this.props.posts.map(post =>\n      <Post\n        key={post.id}\n        post={post}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <Accordion>\n        {this.renderPosts()}\n      </Accordion>\n    );\n  }\n}\n","import React from 'react';\nimport Searchbar from './Searchbar'\nimport PostsFeed from './PostsFeed'\n\nexport default function PostPane(props) {\n  return (\n    <>\n      <Searchbar />\n      <PostsFeed id=\"posts-feed\" posts={props.posts}/>\n    </>\n  );\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\n\nimport axios from \"axios\";\n\nexport default class NewPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {\n        title: \"\",\n        room: \"\",\n        building: null,\n        image: null,\n        description: \"\",\n        diet: {\n          \"vegetarian\": false,\n          \"vegan\": false,\n          \"kosher\": false,\n          \"halal\": false,\n          \"gluten\": false,\n        },\n        feeds: \"\"\n      },\n      valid: {\n        title: false,\n        room: false,\n        building: false,\n        feeds: false\n      },\n      buildings: [\"-- Select building --\", \"Bloomberg Hall\", \"Dod Hall\", \"Colonial\", \"Friend Center\"],\n      diets: [\n        {\n          \"id\": 0,\n          \"name\": \"vegetarian\",\n          \"label\": \"Vegetarian\"\n        },\n        {\n          \"id\": 1,\n          \"name\": \"vegan\",\n          \"label\": \"Vegan\"\n        },\n        {\n          \"id\": 2,\n          \"name\": \"kosher\",\n          \"label\": \"Kosher\"\n        },\n        {\n          \"id\": 3,\n          \"name\": \"halal\",\n          \"label\": \"Halal\"\n        },\n        {\n          \"id\": 4,\n          \"name\": \"gluten\",\n          \"label\": \"Gluten-Free\"\n        }\n      ]\n    };\n  }\n\n  validate(name, value) {\n    const valid = this.state.valid;\n    switch (name) {\n      case \"title\":\n        valid.title = value.length > 0;\n        break;\n      case \"room\":\n        valid.room = value.length > 0;\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const post = this.state.post;\n    post[name] = value;\n    this.setState({ post });\n  }\n\n  handleDietChange = event => {\n    const name = event.target.name;\n    const post = this.state.post;\n    post.diet[name] = !post.diet[name];\n    this.setState({ post });\n  }\n\n  close() {\n    const post = {\n      title: \"\",\n      room: \"\",\n      building: null,\n      image: null,\n      description: \"\",\n      diet: {\n        \"vegetarian\": false,\n        \"vegan\": false,\n        \"kosher\": false,\n        \"halal\": false,\n        \"gluten\": false,\n      },\n      feeds: \"\"\n    };\n    this.setState({ post });\n    this.props.handleClose();\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // Creates diet options array\n    const diet = [];\n    for (let i = 0; i < this.state.diets.length; i++) {\n      if (this.state.post.diet[this.state.diets[i].name]) {\n        diet.push(i);\n      }\n    }\n\n    const post = {\n      \"title\": this.state.title,\n      \"room\": this.state.room,\n      \"building\": this.state.building,\n      \"description\": this.state.description,\n      \"diet\": diet,\n      \"feeds\": this.state.feeds\n    };\n\n    axios.post('https://my-json-server.typicode.com/bcatoto/freat/posts', { post })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n\n    this.close();\n  }\n\n  renderBuildings() {\n    return this.state.buildings.sort()\n      .map((building, index) =>\n        <option key={index}>{building}</option>\n      );\n  }\n\n  renderDietOptions() {\n    return this.state.diets.map(diet =>\n      <Form.Check\n        key={diet.id}\n        type=\"checkbox\"\n        name={diet.name}\n        label={diet.label}\n        onChange={this.handleDietChange}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>New post</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={this.handleSubmit}>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter title\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Room</Form.Label>\n                <Form.Control type=\"text\" name=\"room\" placeholder=\"Enter room\" onChange={this.handleChange}/>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"input-building\">\n                <Form.Label>Building</Form.Label>\n                <Form.Control as=\"select\" name=\"building\" onChange={this.handleChange}>\n                  {this.renderBuildings()}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"input-image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control type=\"file\" />\n              <Form.Control.Feedback type=\"invalid\">Please upload an image.</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-desc\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" name=\"description\" rows=\"3\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-diet\">\n              <Form.Label>Dietary Options</Form.Label>\n              {this.renderDietOptions()}\n            </Form.Group>\n\n            <Form.Group controlId=\"input-feeds\">\n              <Form.Label>Feeds approximately...</Form.Label>\n              <Form.Control type=\"number\" name=\"feeds\" placeholder=\"1\" onChange={this.handleChange}/>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"reset\" variant=\"danger\" className=\"mr-1\" onClick={() => this.close()}>Cancel</Button>\n            <Button type=\"submit\" variant=\"outline-primary\">Submit</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport NavBar from \"./components/NavBar\";\nimport PostPane from \"./components/PostPane\";\nimport NewPost from \"./components/NewPost\";\n\nimport axios from \"axios\";\n\nimport \"bootswatch/dist/custom/bootstrap.min.css\";\nimport \"./css/custom.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://my-json-server.typicode.com/bcatoto/freat/posts')\n      .then(res => {\n        const posts = res.data;\n        this.setState({ posts });\n      })\n  }\n\n  handleOpenModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"app\" className=\"vw-100 vh-100\">\n        <NavBar handleNewPost={() => this.handleOpenModal()}/>\n        <Container fluid className=\"h-100 p-0\">\n          <Row fluid=\"true\" noGutters=\"true\" className=\"h-100\">\n            <Col id=\"post-pane\">\n              <PostPane posts={this.state.posts}/>\n            </Col>\n            <Col id=\"map\">\n              <Container fluid=\"true\" >\n              </Container>\n            </Col>\n          </Row>\n        </Container>\n        <NewPost show={this.state.showModal} handleClose={() => this.handleCloseModal()}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/berries.8d8e3e79.png\";"],"sourceRoot":""}