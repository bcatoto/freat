{"version":3,"sources":["components/Landing.js","components/main/NewPost.js","components/NavBar.js","components/main/Post.js","components/main/PostsFeed.js","components/main/MapPane.js","components/Home.js","components/profile/UserPost.js","components/profile/UserPostsFeed.js","components/Profile.js","App.js","serviceWorker.js","index.js","components/assets/berries.png"],"names":["Landing","Container","fluid","id","className","to","Button","variant","React","Component","NewPost","props","handleChange","event","name","target","value","post","state","setState","handleDietChange","diet","handleSubmit","preventDefault","i","diets","length","push","time","Date","getTime","title","room","building","description","feeds","user","userid","addPost","close","emptyPost","image","buildings","valid","this","handleClose","sort","map","index","key","Form","Check","type","label","onChange","Modal","show","Header","Title","onSubmit","Body","Group","Label","Control","placeholder","Row","as","Col","controlId","renderBuildings","Feedback","rows","renderDietOptions","Footer","onClick","NavBar","showModal","handleCloseModal","Navbar","expand","Brand","handleOpenModal","Post","info","Badge","pill","color","Accordion","Toggle","Card","eventKey","noGutters","Img","src","berries","Collapse","PostsFeed","posts","renderPosts","MapPane","Home","xs","sm","UserPost","UserPostsFeed","Profile","axios","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","App","userPosts","getPosts","getUserPosts","get","then","res","data","console","log","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4e0868dc.chunk.js","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Landing extends React.Component {\n  render() {\n    return (\n      <Container fluid id=\"profile\" className=\"p-0\">\n        <Link to=\"/home\"><Button variant=\"navbar\">Freat</Button></Link>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\n\nimport axios from \"axios\";\n\nexport default class NewPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.emptyPost = {\n      title: \"\",\n      room: \"\",\n      building: null,\n      image: null,\n      description: \"\",\n      diet: {\n        \"vegetarian\": false,\n        \"vegan\": false,\n        \"kosher\": false,\n        \"halal\": false,\n        \"gluten\": false,\n      },\n      feeds: \"\"\n    };\n\n    this.buildings = [\"-- Select building --\", \"Bloomberg Hall\", \"Dod Hall\", \"Colonial\", \"Friend Center\"];\n\n    this.diets = [\n      {\n        \"id\": 0,\n        \"name\": \"vegetarian\",\n        \"label\": \"Vegetarian\"\n      },\n      {\n        \"id\": 1,\n        \"name\": \"vegan\",\n        \"label\": \"Vegan\"\n      },\n      {\n        \"id\": 2,\n        \"name\": \"kosher\",\n        \"label\": \"Kosher\"\n      },\n      {\n        \"id\": 3,\n        \"name\": \"halal\",\n        \"label\": \"Halal\"\n      },\n      {\n        \"id\": 4,\n        \"name\": \"gluten\",\n        \"label\": \"Gluten-Free\"\n      }\n    ];\n\n    this.state = {\n      post: this.emptyPost,\n      valid: {\n        title: false,\n        room: false,\n        building: false,\n        feeds: false\n      }\n    };\n  }\n\n  validate(name, value) {\n    const valid = this.state.valid;\n    switch (name) {\n      case \"title\":\n        valid.title = value.length > 0;\n        break;\n      case \"room\":\n        valid.room = value.length > 0;\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Keeps track of field changes\n  handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const post = this.state.post;\n    post[name] = value;\n    this.setState({ post });\n  }\n\n  // Keeps track of diet options selected\n  handleDietChange = event => {\n    const name = event.target.name;\n    const post = this.state.post;\n    post.diet[name] = !post.diet[name];\n    this.setState({ post });\n  }\n\n  // Closes and resets form\n  close() {\n    this.setState({ post: this.emptyPost });\n    this.props.handleClose();\n  }\n\n  // Handles submission of new post form\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // Creates diet options array\n    const diet = [];\n    for (let i = 0; i < this.diets.length; i++) {\n      if (this.state.post.diet[this.diets[i].name]) {\n        diet.push(i);\n      }\n    }\n\n    // Gets timestamp\n    const time = new Date().getTime();\n\n    const post = {\n      \"title\": this.state.post.title,\n      \"room\": this.state.post.room,\n      \"building\": this.state.post.building,\n      \"description\": this.state.post.description,\n      \"diet\": diet,\n      \"feeds\": this.state.post.feeds,\n      \"time\": time,\n      \"userid\": this.props.user.userid\n    };\n\n    this.props.addPost(post);\n    this.close();\n  }\n\n  // Converts time difference to minutes/hours\n  getTime() {\n    const min = 60 * 1000;\n    const hour = min * 60;\n\n    const time = 2700;\n\n    if (time > 2 * hour) {\n      return Math.floor(time / hour) + \" hours ago\";\n    }\n    else if (time > hour) {\n      return \"1 hour ago\";\n    }\n    else if (time > min){\n      return Math.floor(time / min) + \" minutes ago\";\n    }\n    else {\n      return \"1 minute ago\";\n    }\n  }\n\n  // Renders building options\n  renderBuildings() {\n    return this.buildings.sort()\n      .map((building, index) =>\n        <option key={index}>{building}</option>\n      );\n  }\n\n  // Renders diet options\n  renderDietOptions() {\n    return this.diets.map(diet =>\n      <Form.Check\n        key={diet.id}\n        type=\"checkbox\"\n        name={diet.name}\n        label={diet.label}\n        onChange={this.handleDietChange}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>New post</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={this.handleSubmit}>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter title\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Room</Form.Label>\n                <Form.Control type=\"text\" name=\"room\" placeholder=\"Enter room\" onChange={this.handleChange}/>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"input-building\">\n                <Form.Label>Building</Form.Label>\n                <Form.Control as=\"select\" name=\"building\" onChange={this.handleChange}>\n                  {this.renderBuildings()}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"input-image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control type=\"file\" />\n              <Form.Control.Feedback type=\"invalid\">Please upload an image.</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-desc\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" name=\"description\" rows=\"3\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-diet\">\n              <Form.Label>Dietary Options</Form.Label>\n              {this.renderDietOptions()}\n            </Form.Group>\n\n            <Form.Group controlId=\"input-feeds\">\n              <Form.Label>Feeds approximately...</Form.Label>\n              <Form.Control type=\"number\" name=\"feeds\" placeholder=\"1\" onChange={this.handleChange}/>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"reset\" variant=\"cancel\" className=\"mr-1\" onClick={() => this.close()}>Cancel</Button>\n            <Button type=\"submit\" variant=\"submit\">Submit</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport NewPost from \"./main/NewPost\";\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <>\n        <NewPost\n          show={this.state.showModal}\n          handleClose={() => this.handleCloseModal()}\n          addPost={this.props.addPost}\n        />\n        <Navbar className=\"p-2\" variant=\"dark\" expand=\"lg\">\n          <Link to=\"/home\"><Navbar.Brand className=\"ml-2\">Freat</Navbar.Brand></Link>\n          <Button\n            className=\"mr-auto\" variant=\"navbar\"\n            onClick={() => this.handleOpenModal()}\n          >\n            New post\n          </Button>\n          <Link to=\"/profile\"><Button variant=\"navbar\">Account</Button></Link>\n        </Navbar>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport berries from \"./../assets/berries.png\";\n\nexport default class Post extends React.Component {\n  renderDietOptions() {\n    const info = [\n      {\n        \"key\": 0,\n        \"name\": \"Vegetarian\",\n        \"color\": \"vegetarian\",\n      },\n      {\n        \"key\": 1,\n        \"name\": \"Vegan\",\n        \"color\": \"vegan\",\n      },\n      {\n        \"key\": 2,\n        \"name\": \"Kosher\",\n        \"color\": \"kosher\",\n      },\n      {\n        \"key\": 3,\n        \"name\": \"Halal\",\n        \"color\": \"halal\",\n      },\n      {\n        \"key\": 4,\n        \"name\": \"Gluten-Free\",\n        \"color\": \"gluten\",\n      }\n    ];\n\n    const diets = this.props.post.diet.map(i => info[i]);\n    return diets.map(diet =>\n      <Badge pill key={diet.key} variant={diet.color}>{diet.name}</Badge>\n    );\n  }\n\n  render() {\n    return (\n      <Accordion.Toggle as={Card} eventKey={this.props.post.id}>\n        <Card.Header>\n          <Container fluid className=\"p-0\">\n            <Row noGutters=\"true\">\n              <Card.Title className=\"mr-auto\">{this.props.post.title}</Card.Title>\n              <span className=\"post-time\">15 minutes ago</span>\n            </Row>\n            <Row noGutters=\"true\" className=\"mt-1\">\n              <Button variant=\"location\">\n                <i className=\"fas fa-map-marker-alt mr-1\"></i>{this.props.post.room} {this.props.post.building}\n              </Button>\n            </Row>\n          </Container>\n        </Card.Header>\n        <Card.Img src={berries} />\n        <Accordion.Collapse eventKey={this.props.post.id}>\n          <Card.Body>\n            {this.props.post.description}\n            <br/>\n            <em>Feeds approximately: {this.props.post.feeds}</em>\n          </Card.Body>\n        </Accordion.Collapse>\n        <Card.Footer>\n          {this.renderDietOptions()}\n        </Card.Footer>\n      </Accordion.Toggle>\n    );\n  }\n}\n","import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Post from \"./Post\"\n\nexport default class PostsFeed extends React.Component {\n  renderPosts() {\n    return this.props.posts.map(post =>\n      <Post key={post.id} post={post} />\n    );\n  }\n\n  render() {\n    return (\n      <Accordion>\n        {this.renderPosts()}\n      </Accordion>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function MapPane() {\n  return (\n    <iframe id=\"map\" src=\"https://www.google.com/maps/embed/v1/place?key=AIzaSyB8gNdm5uw0zkEZhknd0nLiUhbrd8K3kjw&q=Princeton,New+Jersey\">\n    </iframe>\n  );\n}\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport NavBar from \"./NavBar\";\nimport Searchbar from \"./main/Searchbar\";\nimport PostsFeed from \"./main/PostsFeed\";\nimport MapPane from \"./main/MapPane\";\n\nexport default function Home(props) {\n  return(\n    <Row fluid=\"true\" noGutters=\"true\">\n      <Col id=\"post-pane\" xs={12} sm={5}>\n        <PostsFeed posts={props.posts} />\n      </Col>\n      <Col id=\"map-pane\">\n        <MapPane />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport berries from \"./../assets/berries.png\";\n\nexport default class UserPost extends React.Component {\n  renderDietOptions() {\n    const info = [\n      {\n        \"key\": 0,\n        \"name\": \"Vegetarian\",\n        \"color\": \"vegetarian\",\n      },\n      {\n        \"key\": 1,\n        \"name\": \"Vegan\",\n        \"color\": \"vegan\",\n      },\n      {\n        \"key\": 2,\n        \"name\": \"Kosher\",\n        \"color\": \"kosher\",\n      },\n      {\n        \"key\": 3,\n        \"name\": \"Halal\",\n        \"color\": \"halal\",\n      },\n      {\n        \"key\": 4,\n        \"name\": \"Gluten-Free\",\n        \"color\": \"gluten\",\n      }\n    ];\n\n    const diets = this.props.post.diet.map(i => info[i]);\n    return diets.map(diet =>\n      <Badge pill key={diet.key} variant={diet.color}>{diet.name}</Badge>\n    );\n  }\n\n  render() {\n    return (\n      <Card>\n        <Card.Header>\n          <Container fluid className=\"p-0\">\n            <Row noGutters=\"true\">\n              <Card.Title className=\"mr-auto\">{this.props.post.title}</Card.Title>\n              <span className=\"post-time\">15 minutes ago</span>\n              <Button variant=\"edit\"><i className=\"fas fa-ellipsis-v p-0 m-0\"></i></Button>\n            </Row>\n            <Row noGutters=\"true\" className=\"mt-1\">\n              <Button variant=\"location\">\n                <i className=\"fas fa-map-marker-alt mr-1\"></i>{this.props.post.room} {this.props.post.building}\n              </Button>\n            </Row>\n          </Container>\n        </Card.Header>\n        <Card.Img src={berries} />\n        <Card.Body>\n          {this.props.post.description}\n          <br/>\n          <em>Feeds approximately: {this.props.post.feeds}</em>\n        </Card.Body>\n        <Card.Footer>\n          {this.renderDietOptions()}\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\"\nimport UserPost from \"./UserPost\"\n\nexport default class UserPostsFeed extends React.Component {\n  renderPosts() {\n    return this.props.posts.map(post =>\n      <UserPost key={post.id} post={post} />\n    );\n  }\n\n  render() {\n    return (\n      <Container id=\"user-feed\" className=\"p-0\">\n        {this.renderPosts()}\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\nimport NavBar from \"./NavBar\";\nimport UserPostsFeed from \"./profile/UserPostsFeed\";\n\nimport axios from \"axios\";\n\nexport default function Profile(props) {\n  return (\n    <Container fluid id=\"profile\" className=\"p-0\">\n      <h3 id=\"profile-name\">Bianca Catoto</h3>\n      <h4 id=\"profile-text\">Active Posts</h4>\n      <UserPostsFeed posts={props.posts}/>\n    </Container>\n  );\n}\n","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport Landing from \"./components/Landing\"\nimport NavBar from \"./components/NavBar\"\nimport Home from \"./components/Home\"\nimport Profile from \"./components/Profile\"\n\nimport axios from \"axios\";\n\nimport \"bootswatch/dist/flatly/bootstrap.min.css\";\nimport \"./css/custom.css\";\n\n// For CSRF token\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.withCredentials = true;\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        id: null,\n        name: \"\"\n      },\n      posts:[],\n      userPosts: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPosts();\n    this.getUserPosts();\n  }\n\n  getPosts() {\n    axios.get(\"/api/v1/posting/\")\n      .then(res => {\n        const posts = res.data;\n        this.setState({ posts });\n      });\n  }\n\n  getUserPosts() {\n    axios.get(\"https://my-json-server.typicode.com/bcatoto/freat/posts\")\n      .then(res => {\n        const userPosts = res.data;\n        this.setState({ userPosts });\n      });\n  }\n\n  addPost(post) {\n    axios.post(\"https://my-json-server.typicode.com/bcatoto/freat/posts\", { post })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n  }\n\n  render() {\n    return(\n      <div id=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route render={(props) => (\n            <NavBar {...props}\n              addPost={this.addPost}\n              user={this.state.user}\n            />\n            )}\n          />\n        </Switch>\n        <Route path=\"/Home\"\n          render={(props) => (\n            <Home {...props}\n              posts={this.state.posts}\n              user={this.state.user}\n            />\n          )}\n        />\n        <Route path=\"/profile\"\n          render={(props) => (\n            <Profile {...props}\n              posts={this.state.userPosts}\n              user={this.state.user}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom'\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/berries.8d8e3e79.png\";"],"sourceRoot":""}