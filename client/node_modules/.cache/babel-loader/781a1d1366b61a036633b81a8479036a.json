{"ast":null,"code":"var _jsxFileName = \"/Users/biancacatoto/Documents/freat/client/src/components/main/Post.js\";\nimport React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport berries from \"./../assets/images/berries.png\";\nexport default class Post extends React.Component {\n  renderDietOptions() {\n    const info = [{\n      \"key\": 0,\n      \"name\": \"Vegetarian\",\n      \"color\": \"vegetarian\"\n    }, {\n      \"key\": 1,\n      \"name\": \"Vegan\",\n      \"color\": \"vegan\"\n    }, {\n      \"key\": 2,\n      \"name\": \"Kosher\",\n      \"color\": \"kosher\"\n    }, {\n      \"key\": 3,\n      \"name\": \"Halal\",\n      \"color\": \"halal\"\n    }, {\n      \"key\": 4,\n      \"name\": \"Gluten-Free\",\n      \"color\": \"gluten\"\n    }];\n    const diets = this.props.post.diet.map(i => info[i]);\n    return diets.map(diet => React.createElement(Badge, {\n      pill: true,\n      key: diet.key,\n      variant: diet.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, diet.name));\n  }\n\n  render() {\n    return React.createElement(Accordion.Toggle, {\n      as: Card,\n      eventKey: this.props.post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      className: \"p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Row, {\n      noGutters: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.post.title), React.createElement(\"span\", {\n      className: \"post-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"15 minutes ago\")), React.createElement(Row, {\n      noGutters: \"true\",\n      className: \"mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-map-marker-alt mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), this.props.post.room, \" \", this.props.post.building)))), React.createElement(Card.Img, {\n      src: berries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Accordion.Collapse, {\n      eventKey: this.props.post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.post.description, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Feeds approximately: \", this.props.post.feeds))), React.createElement(Card.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.renderDietOptions()));\n  }\n\n}","map":{"version":3,"sources":["/Users/biancacatoto/Documents/freat/client/src/components/main/Post.js"],"names":["React","Accordion","Card","Button","Badge","Container","Row","berries","Post","Component","renderDietOptions","info","diets","props","post","diet","map","i","key","color","name","render","id","title","room","building","description","feeds"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport berries from \"./../assets/images/berries.png\";\n\nexport default class Post extends React.Component {\n  renderDietOptions() {\n    const info = [\n      {\n        \"key\": 0,\n        \"name\": \"Vegetarian\",\n        \"color\": \"vegetarian\",\n      },\n      {\n        \"key\": 1,\n        \"name\": \"Vegan\",\n        \"color\": \"vegan\",\n      },\n      {\n        \"key\": 2,\n        \"name\": \"Kosher\",\n        \"color\": \"kosher\",\n      },\n      {\n        \"key\": 3,\n        \"name\": \"Halal\",\n        \"color\": \"halal\",\n      },\n      {\n        \"key\": 4,\n        \"name\": \"Gluten-Free\",\n        \"color\": \"gluten\",\n      }\n    ];\n\n    const diets = this.props.post.diet.map(i => info[i]);\n    return diets.map(diet =>\n      <Badge pill key={diet.key} variant={diet.color}>{diet.name}</Badge>\n    );\n  }\n\n  render() {\n    return (\n      <Accordion.Toggle as={Card} eventKey={this.props.post.id}>\n        <Card.Header>\n          <Container fluid className=\"p-0\">\n            <Row noGutters=\"true\">\n              <Card.Title className=\"mr-auto\">{this.props.post.title}</Card.Title>\n              <span className=\"post-time\">15 minutes ago</span>\n            </Row>\n            <Row noGutters=\"true\" className=\"mt-1\">\n              <Button variant=\"location\">\n                <i className=\"fas fa-map-marker-alt mr-1\"></i>{this.props.post.room} {this.props.post.building}\n              </Button>\n            </Row>\n          </Container>\n        </Card.Header>\n        <Card.Img src={berries} />\n        <Accordion.Collapse eventKey={this.props.post.id}>\n          <Card.Body>\n            {this.props.post.description}\n            <br/>\n            <em>Feeds approximately: {this.props.post.feeds}</em>\n          </Card.Body>\n        </Accordion.Collapse>\n        <Card.Footer>\n          {this.renderDietOptions()}\n        </Card.Footer>\n      </Accordion.Toggle>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}