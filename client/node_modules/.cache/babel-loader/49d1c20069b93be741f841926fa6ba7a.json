{"ast":null,"code":"var _jsxFileName = \"/Users/biancacatoto/Documents/freat/client_react/src/components/NewPost.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nexport default class NewPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleDietChange = event => {\n      const name = event.target.name;\n      const diet = this.state.diet;\n      diet[name] = !diet[name];\n      this.setState({\n        diet\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state);\n    };\n\n    this.state = {\n      title: \"\",\n      room: \"\",\n      building: null,\n      image: null,\n      description: \"\",\n      diet: {\n        \"vegetarian\": false,\n        \"vegan\": false,\n        \"kosher\": false,\n        \"halal\": false,\n        \"gluten\": false\n      },\n      feeds: \"\"\n    };\n  }\n\n  handleCancel() {\n    this.props.handleClose();\n    const diet = {\n      \"vegetarian\": false,\n      \"vegan\": false,\n      \"kosher\": false,\n      \"halal\": false,\n      \"gluten\": false\n    };\n  }\n\n  renderBuildings() {\n    const buildings = [\"-- Select building --\", \"Bloomberg Hall\", \"Dod Hall\", \"Colonial\", \"Friend Center\"];\n    return buildings.sort().map((building, index) => React.createElement(\"option\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, building));\n  }\n\n  renderDietOptions() {\n    const diets = [{\n      \"name\": \"vegetarian\",\n      \"label\": \"Vegetarian\"\n    }, {\n      \"name\": \"vegan\",\n      \"label\": \"Vegan\"\n    }, {\n      \"name\": \"kosher\",\n      \"label\": \"Kosher\"\n    }, {\n      \"name\": \"halal\",\n      \"label\": \"Halal\"\n    }, {\n      \"name\": \"gluten\",\n      \"label\": \"Gluten-Free\"\n    }];\n    return diets.map((diet, index) => React.createElement(Form.Check, {\n      key: index,\n      type: \"checkbox\",\n      name: diet.name,\n      label: diet.label,\n      onChange: this.handleDietChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"New post\")), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Room\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"room\",\n      placeholder: \"Enter room\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"input-building\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Building\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"building\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.renderBuildings()))), React.createElement(Form.Group, {\n      controlId: \"input-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Image\"), React.createElement(Form.Control, {\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Please upload an image.\")), React.createElement(Form.Group, {\n      controlId: \"input-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      name: \"description\",\n      rows: \"3\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"input-diet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Dietary Options\"), this.renderDietOptions()), React.createElement(Form.Group, {\n      controlId: \"input-feeds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Feeds approximately...\"), React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"feeds\",\n      placeholder: \"1\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"reset\",\n      variant: \"danger\",\n      className: \"mr-1\",\n      onClick: this.handleCancel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/biancacatoto/Documents/freat/client_react/src/components/NewPost.js"],"names":["React","useState","Modal","InputGroup","Form","Button","Col","Row","NewPost","Component","constructor","props","handleChange","event","name","target","value","setState","handleDietChange","diet","state","handleSubmit","preventDefault","console","log","title","room","building","image","description","feeds","handleCancel","handleClose","renderBuildings","buildings","sort","map","index","renderDietOptions","diets","label","render","show"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\"\nimport InputGroup from \"react-bootstrap/InputGroup\"\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/Button\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\n\nexport default class NewPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      room: \"\",\n      building: null,\n      image: null,\n      description: \"\",\n      diet: {\n        \"vegetarian\": false,\n        \"vegan\": false,\n        \"kosher\": false,\n        \"halal\": false,\n        \"gluten\": false,\n      },\n      feeds: \"\"\n    };\n  }\n\n  handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({ [name]: value });\n  }\n\n  handleDietChange = event => {\n    const name = event.target.name;\n    const diet = this.state.diet;\n    diet[name] = !diet[name];\n    this.setState({ diet });\n  }\n\n  handleCancel() {\n    this.props.handleClose();\n\n    const diet = {\n      \"vegetarian\": false,\n      \"vegan\": false,\n      \"kosher\": false,\n      \"halal\": false,\n      \"gluten\": false,\n    };\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(this.state);\n  }\n\n  renderBuildings() {\n    const buildings = [\"-- Select building --\", \"Bloomberg Hall\", \"Dod Hall\", \"Colonial\", \"Friend Center\"];\n    return buildings.sort()\n      .map((building, index) =>\n        <option key={index}>{building}</option>\n      );\n  }\n\n  renderDietOptions() {\n    const diets = [\n      {\n        \"name\": \"vegetarian\",\n        \"label\": \"Vegetarian\"\n      },\n      {\n        \"name\": \"vegan\",\n        \"label\": \"Vegan\"\n      },\n      {\n        \"name\": \"kosher\",\n        \"label\": \"Kosher\"\n      },\n      {\n        \"name\": \"halal\",\n        \"label\": \"Halal\"\n      },\n      {\n        \"name\": \"gluten\",\n        \"label\": \"Gluten-Free\"\n      }\n    ];\n\n    return diets.map((diet, index) =>\n      <Form.Check\n        key={index}\n        type=\"checkbox\"\n        name={diet.name}\n        label={diet.label}\n        onChange={this.handleDietChange}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>New post</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={this.handleSubmit}>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter title\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Room</Form.Label>\n                <Form.Control type=\"text\" name=\"room\" placeholder=\"Enter room\" onChange={this.handleChange}/>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"input-building\">\n                <Form.Label>Building</Form.Label>\n                <Form.Control as=\"select\" name=\"building\" onChange={this.handleChange}>\n                  {this.renderBuildings()}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"input-image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control type=\"file\" />\n              <Form.Control.Feedback type=\"invalid\">Please upload an image.</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-desc\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" name=\"description\" rows=\"3\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-diet\">\n              <Form.Label>Dietary Options</Form.Label>\n              {this.renderDietOptions()}\n            </Form.Group>\n\n            <Form.Group controlId=\"input-feeds\">\n              <Form.Label>Feeds approximately...</Form.Label>\n              <Form.Control type=\"number\" name=\"feeds\" placeholder=\"1\" onChange={this.handleChange}/>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"reset\" variant=\"danger\" className=\"mr-1\" onClick={this.handleCancel()}>Cancel</Button>\n            <Button type=\"submit\" variant=\"outline-primary\">Submit</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}