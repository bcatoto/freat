{"ast":null,"code":"var _jsxFileName = \"/Users/biancacatoto/Documents/freat/client/src/components/main/NewPost.js\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nexport default class NewPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      const post = this.state.post;\n      post[name] = value;\n      this.setState({\n        post\n      });\n    };\n\n    this.handleDietChange = event => {\n      const name = event.target.name;\n      const post = this.state.post;\n      post.diet[name] = !post.diet[name];\n      this.setState({\n        post\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // Creates diet options array\n\n      const diet = [];\n\n      for (let i = 0; i < this.state.diets.length; i++) {\n        if (this.state.post.diet[this.state.diets[i].name]) {\n          diet.push(i);\n        }\n      }\n\n      const post = {\n        \"title\": this.state.post.title,\n        \"room\": this.state.post.room,\n        \"building\": this.state.post.building,\n        \"description\": this.state.post.description,\n        \"diet\": diet,\n        \"feeds\": this.state.post.feeds\n      };\n      axios.post('https://my-json-server.typicode.com/bcatoto/freat/posts', {\n        post\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n      this.close();\n    };\n\n    this.emptyPost = {\n      title: \"\",\n      room: \"\",\n      building: null,\n      image: null,\n      description: \"\",\n      diet: {\n        \"vegetarian\": false,\n        \"vegan\": false,\n        \"kosher\": false,\n        \"halal\": false,\n        \"gluten\": false\n      },\n      feeds: \"\"\n    };\n    this.buildings = [\"-- Select building --\", \"Bloomberg Hall\", \"Dod Hall\", \"Colonial\", \"Friend Center\"];\n    this.diets = this.state = {\n      post: this.emptyPost,\n      valid: {\n        title: false,\n        room: false,\n        building: false,\n        feeds: false\n      }\n    };\n  }\n\n  validate(name, value) {\n    const valid = this.state.valid;\n\n    switch (name) {\n      case \"title\":\n        valid.title = value.length > 0;\n        break;\n\n      case \"room\":\n        valid.room = value.length > 0;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  close() {\n    this.setState({\n      post: this.emptyPost\n    });\n    this.props.handleClose();\n  }\n\n  renderBuildings() {\n    return this.state.buildings.sort().map((building, index) => React.createElement(\"option\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, building));\n  }\n\n  renderDietOptions() {\n    return this.state.diets.map(diet => React.createElement(Form.Check, {\n      key: diet.id,\n      type: \"checkbox\",\n      name: diet.name,\n      label: diet.label,\n      onChange: this.handleDietChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"New post\")), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Room\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"room\",\n      placeholder: \"Enter room\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"input-building\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Building\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"building\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.renderBuildings()))), React.createElement(Form.Group, {\n      controlId: \"input-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Image\"), React.createElement(Form.Control, {\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Please upload an image.\")), React.createElement(Form.Group, {\n      controlId: \"input-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      name: \"description\",\n      rows: \"3\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"input-diet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Dietary Options\"), this.renderDietOptions()), React.createElement(Form.Group, {\n      controlId: \"input-feeds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Feeds approximately...\"), React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"feeds\",\n      placeholder: \"1\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"reset\",\n      variant: \"danger\",\n      className: \"mr-1\",\n      onClick: () => this.close(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/biancacatoto/Documents/freat/client/src/components/main/NewPost.js"],"names":["React","Modal","Form","Button","Col","axios","NewPost","Component","constructor","props","handleChange","event","name","target","value","post","state","setState","handleDietChange","diet","handleSubmit","preventDefault","i","diets","length","push","title","room","building","description","feeds","then","res","console","log","data","close","emptyPost","image","buildings","valid","validate","handleClose","renderBuildings","sort","map","index","renderDietOptions","id","label","render","show"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\n\nimport axios from \"axios\";\n\nexport default class NewPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.emptyPost = {\n      title: \"\",\n      room: \"\",\n      building: null,\n      image: null,\n      description: \"\",\n      diet: {\n        \"vegetarian\": false,\n        \"vegan\": false,\n        \"kosher\": false,\n        \"halal\": false,\n        \"gluten\": false,\n      },\n      feeds: \"\"\n    };\n\n    this.buildings = [\"-- Select building --\", \"Bloomberg Hall\", \"Dod Hall\", \"Colonial\", \"Friend Center\"];\n    this.diets =\n\n    this.state = {\n      post: this.emptyPost,\n      valid: {\n        title: false,\n        room: false,\n        building: false,\n        feeds: false\n      }\n    };\n  }\n\n  validate(name, value) {\n    const valid = this.state.valid;\n    switch (name) {\n      case \"title\":\n        valid.title = value.length > 0;\n        break;\n      case \"room\":\n        valid.room = value.length > 0;\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const post = this.state.post;\n    post[name] = value;\n    this.setState({ post });\n  }\n\n  handleDietChange = event => {\n    const name = event.target.name;\n    const post = this.state.post;\n    post.diet[name] = !post.diet[name];\n    this.setState({ post });\n  }\n\n  close() {\n    this.setState({ post: this.emptyPost });\n    this.props.handleClose();\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // Creates diet options array\n    const diet = [];\n    for (let i = 0; i < this.state.diets.length; i++) {\n      if (this.state.post.diet[this.state.diets[i].name]) {\n        diet.push(i);\n      }\n    }\n\n    const post = {\n      \"title\": this.state.post.title,\n      \"room\": this.state.post.room,\n      \"building\": this.state.post.building,\n      \"description\": this.state.post.description,\n      \"diet\": diet,\n      \"feeds\": this.state.post.feeds\n    };\n\n    axios.post('https://my-json-server.typicode.com/bcatoto/freat/posts', { post })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n\n    this.close();\n  }\n\n  renderBuildings() {\n    return this.state.buildings.sort()\n      .map((building, index) =>\n        <option key={index}>{building}</option>\n      );\n  }\n\n  renderDietOptions() {\n    return this.state.diets.map(diet =>\n      <Form.Check\n        key={diet.id}\n        type=\"checkbox\"\n        name={diet.name}\n        label={diet.label}\n        onChange={this.handleDietChange}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>New post</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={this.handleSubmit}>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter title\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Room</Form.Label>\n                <Form.Control type=\"text\" name=\"room\" placeholder=\"Enter room\" onChange={this.handleChange}/>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"input-building\">\n                <Form.Label>Building</Form.Label>\n                <Form.Control as=\"select\" name=\"building\" onChange={this.handleChange}>\n                  {this.renderBuildings()}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"input-image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control type=\"file\" />\n              <Form.Control.Feedback type=\"invalid\">Please upload an image.</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-desc\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" name=\"description\" rows=\"3\" onChange={this.handleChange}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"input-diet\">\n              <Form.Label>Dietary Options</Form.Label>\n              {this.renderDietOptions()}\n            </Form.Group>\n\n            <Form.Group controlId=\"input-feeds\">\n              <Form.Label>Feeds approximately...</Form.Label>\n              <Form.Control type=\"number\" name=\"feeds\" placeholder=\"1\" onChange={this.handleChange}/>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"reset\" variant=\"danger\" className=\"mr-1\" onClick={() => this.close()}>Cancel</Button>\n            <Button type=\"submit\" variant=\"outline-primary\">Submit</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}