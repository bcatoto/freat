{"ast":null,"code":"import _classCallCheck from\"/Users/biancacatoto/Documents/freat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/biancacatoto/Documents/freat/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/biancacatoto/Documents/freat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/biancacatoto/Documents/freat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/biancacatoto/Documents/freat/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import Accordion from\"react-bootstrap/Accordion\";import Card from\"react-bootstrap/Card\";import Button from\"react-bootstrap/Button\";import Badge from\"react-bootstrap/Badge\";import Container from\"react-bootstrap/Container\";import Row from\"react-bootstrap/Row\";import berries from\"./../assets/images/berries.png\";var Post=/*#__PURE__*/function(_React$Component){_inherits(Post,_React$Component);function Post(){_classCallCheck(this,Post);return _possibleConstructorReturn(this,_getPrototypeOf(Post).apply(this,arguments));}_createClass(Post,[{key:\"renderDietOptions\",value:function renderDietOptions(){var info=[{\"key\":0,\"name\":\"Vegetarian\",\"color\":\"vegetarian\"},{\"key\":1,\"name\":\"Vegan\",\"color\":\"vegan\"},{\"key\":2,\"name\":\"Kosher\",\"color\":\"kosher\"},{\"key\":3,\"name\":\"Halal\",\"color\":\"halal\"},{\"key\":4,\"name\":\"Gluten-Free\",\"color\":\"gluten\"}];var diets=this.props.post.diet.map(function(i){return info[i];});return diets.map(function(diet){return React.createElement(Badge,{pill:true,key:diet.key,variant:diet.color},diet.name);});}},{key:\"render\",value:function render(){return React.createElement(Accordion.Toggle,{as:Card,eventKey:this.props.post.id},React.createElement(Card.Header,null,React.createElement(Container,{fluid:true,className:\"p-0\"},React.createElement(Row,{noGutters:\"true\"},React.createElement(Card.Title,{className:\"mr-auto\"},this.props.post.title),React.createElement(\"span\",{className:\"post-time\"},\"15 minutes ago\")),React.createElement(Row,{noGutters:\"true\",className:\"mt-1\"},React.createElement(Button,{variant:\"location\"},React.createElement(\"i\",{className:\"fas fa-map-marker-alt mr-1\"}),this.props.post.room,\" \",this.props.post.building)))),React.createElement(Card.Img,{src:berries}),React.createElement(Accordion.Collapse,{eventKey:this.props.post.id},React.createElement(Card.Body,null,this.props.post.description,React.createElement(\"br\",null),React.createElement(\"em\",null,\"Feeds approximately: \",this.props.post.feeds))),React.createElement(Card.Footer,null,this.renderDietOptions()));}}]);return Post;}(React.Component);export{Post as default};","map":{"version":3,"sources":["/Users/biancacatoto/Documents/freat/client/src/components/Post.js"],"names":["React","Accordion","Card","Button","Badge","Container","Row","berries","Post","info","diets","props","post","diet","map","i","key","color","name","id","title","room","building","description","feeds","renderDietOptions","Component"],"mappings":"+nBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,gCAApB,C,GAEqBC,CAAAA,I,wRACC,CAClB,GAAMC,CAAAA,IAAI,CAAG,CACX,CACE,MAAO,CADT,CAEE,OAAQ,YAFV,CAGE,QAAS,YAHX,CADW,CAMX,CACE,MAAO,CADT,CAEE,OAAQ,OAFV,CAGE,QAAS,OAHX,CANW,CAWX,CACE,MAAO,CADT,CAEE,OAAQ,QAFV,CAGE,QAAS,QAHX,CAXW,CAgBX,CACE,MAAO,CADT,CAEE,OAAQ,OAFV,CAGE,QAAS,OAHX,CAhBW,CAqBX,CACE,MAAO,CADT,CAEE,OAAQ,aAFV,CAGE,QAAS,QAHX,CArBW,CAAb,CA4BA,GAAMC,CAAAA,KAAK,CAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,GAArB,CAAyB,SAAAC,CAAC,QAAIN,CAAAA,IAAI,CAACM,CAAD,CAAR,EAA1B,CAAd,CACA,MAAOL,CAAAA,KAAK,CAACI,GAAN,CAAU,SAAAD,IAAI,QACnB,qBAAC,KAAD,EAAO,IAAI,KAAX,CAAY,GAAG,CAAEA,IAAI,CAACG,GAAtB,CAA2B,OAAO,CAAEH,IAAI,CAACI,KAAzC,EAAiDJ,IAAI,CAACK,IAAtD,CADmB,EAAd,CAAP,CAGD,C,uCAEQ,CACP,MACE,qBAAC,SAAD,CAAW,MAAX,EAAkB,EAAE,CAAEhB,IAAtB,CAA4B,QAAQ,CAAE,KAAKS,KAAL,CAAWC,IAAX,CAAgBO,EAAtD,EACE,oBAAC,IAAD,CAAM,MAAN,MACE,oBAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,KAA3B,EACE,oBAAC,GAAD,EAAK,SAAS,CAAC,MAAf,EACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,EAAiC,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,KAAjD,CADF,CAEE,4BAAM,SAAS,CAAC,WAAhB,mBAFF,CADF,CAKE,oBAAC,GAAD,EAAK,SAAS,CAAC,MAAf,CAAsB,SAAS,CAAC,MAAhC,EACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,EACE,yBAAG,SAAS,CAAC,4BAAb,EADF,CACiD,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,IADjE,KACwE,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,QADxF,CADF,CALF,CADF,CADF,CAcE,oBAAC,IAAD,CAAM,GAAN,EAAU,GAAG,CAAEf,OAAf,EAdF,CAeE,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAE,KAAKI,KAAL,CAAWC,IAAX,CAAgBO,EAA9C,EACE,oBAAC,IAAD,CAAM,IAAN,MACG,KAAKR,KAAL,CAAWC,IAAX,CAAgBW,WADnB,CAEE,8BAFF,CAGE,sDAA0B,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,KAA1C,CAHF,CADF,CAfF,CAsBE,oBAAC,IAAD,CAAM,MAAN,MACG,KAAKC,iBAAL,EADH,CAtBF,CADF,CA4BD,C,kBAjE+BzB,KAAK,CAAC0B,S,SAAnBlB,I","sourcesContent":["import React from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Card from \"react-bootstrap/Card\"\nimport Button from \"react-bootstrap/Button\"\nimport Badge from \"react-bootstrap/Badge\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\n\nimport berries from \"./../assets/images/berries.png\"\n\nexport default class Post extends React.Component {\n  renderDietOptions() {\n    const info = [\n      {\n        \"key\": 0,\n        \"name\": \"Vegetarian\",\n        \"color\": \"vegetarian\",\n      },\n      {\n        \"key\": 1,\n        \"name\": \"Vegan\",\n        \"color\": \"vegan\",\n      },\n      {\n        \"key\": 2,\n        \"name\": \"Kosher\",\n        \"color\": \"kosher\",\n      },\n      {\n        \"key\": 3,\n        \"name\": \"Halal\",\n        \"color\": \"halal\",\n      },\n      {\n        \"key\": 4,\n        \"name\": \"Gluten-Free\",\n        \"color\": \"gluten\",\n      }\n    ];\n\n    const diets = this.props.post.diet.map(i => info[i]);\n    return diets.map(diet =>\n      <Badge pill key={diet.key} variant={diet.color}>{diet.name}</Badge>\n    );\n  }\n\n  render() {\n    return (\n      <Accordion.Toggle as={Card} eventKey={this.props.post.id}>\n        <Card.Header>\n          <Container fluid className=\"p-0\">\n            <Row noGutters=\"true\">\n              <Card.Title className=\"mr-auto\">{this.props.post.title}</Card.Title>\n              <span className=\"post-time\">15 minutes ago</span>\n            </Row>\n            <Row noGutters=\"true\" className=\"mt-1\">\n              <Button variant=\"location\">\n                <i className=\"fas fa-map-marker-alt mr-1\"></i>{this.props.post.room} {this.props.post.building}\n              </Button>\n            </Row>\n          </Container>\n        </Card.Header>\n        <Card.Img src={berries} />\n        <Accordion.Collapse eventKey={this.props.post.id}>\n          <Card.Body>\n            {this.props.post.description}\n            <br/>\n            <em>Feeds approximately: {this.props.post.feeds}</em>\n          </Card.Body>\n        </Accordion.Collapse>\n        <Card.Footer>\n          {this.renderDietOptions()}\n        </Card.Footer>\n      </Accordion.Toggle>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}